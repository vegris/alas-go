services:
  redis:
    image: "redis:7.4"
    restart: "on-failure:3"
    ports:
      - "6379:6379"

  postgres:
    image: "postgres:16.4"
    restart: "on-failure:3"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres

  kafka:
    image: "bitnami/kafka:3.9"
    restart: "on-failure:3"
    ports:
      - "9092:9094"
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      start_period: "5s"
    environment:
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_CFG_OFFSETS_TOPIC_NUM_PARTITIONS: "1"

  kiwi:
    profiles:
      - integration
    image: kiwi
    pull_policy: build
    build:
      args:
        PROGRAM_NAME: kiwi
    restart: "on-failure:3"
    ports:
      - "4000:8080"
    depends_on:
      redis:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      KAFKA_HOST: kafka
      TOKEN_SECRET: $TOKEN_SECRET
      ALLOWED_SOURCES: $ALLOWED_SOURCES

  orcrist:
    profiles:
      - integration
    image: orcrist
    pull_policy: build
    build:
      args:
        PROGRAM_NAME: orcrist
    restart: "on-failure:3"
    ports:
      - "4001:8080"
    depends_on:
      redis:
        condition: service_started
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      REDIS_HOST: redis
      POSTGRES_HOST: postgres
      KAFKA_HOST: kafka
      TOKEN_SECRET: $TOKEN_SECRET
